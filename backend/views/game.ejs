<html>
<head>
    <head>
        <style>
            body {
                font-family: 'Arial', sans-serif;
                background-color: #f0f0f0;
                margin: 0;
                padding: 0;
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                align-items: center;
            }

            .welcome-box{
                display: flex;
                justify-content: flex-end;
                width: 100%;
                background-color: #333;
                padding: 10px;
                color: white;
                box-sizing: border-box;
                max-width: 100%;
            }

            .cards-container {
                display: flex;
                flex-wrap: wrap;
                align-items: flex-start;
                padding-right: 155px;
            }

            .deckcard {
                width: 167px; /* Width of your card */
                height: 258px; /* Height of your card */
                margin-right: -155px; /* Adjust for overlap */
                margin-bottom: 20px; /* Space between rows */
            }

            .playercard {
                width: 167px;
                height: 258px;
                margin-right: -40px;
                margin-bottom: 20px; /* Space between rows */
            }

            .discardedcard {
                width: 167px;
                height: 258px;
                margin-right: -100px;
                margin-bottom: 20px; /* Space between rows */
            }



        </style>
    <div class="welcome-box">
        <script src="/socket.io/socket.io.js"></script>
        <p>Welcome to Game <%= gameId %>, <%= user.username %>!</p>
    </div>

    <% players.forEach(player => { %>
        <h3>Player <%= player.username %>'s Cards:</h3>
        <div class="cards-container">
                <% gamecards.forEach(card => { 
                    if (card.location === player.username) { %>
                        <div class="playercard">
                            <img src="/cardImages/card_<%= card.cardid %>.png">
                        </div>
                    <% }
                }); %>
        </div>
    <% }); %>

    <div class="discardPile">
        <h3>Discard Pile:</h3>
        <div class="cards-container">
            <% gamecards.forEach(card => { 
                if (card.location === 'discardpile') { %>
                    <div class="discardedcard">
                        <img src="/cardImages/card_<%= card.cardid %>.png">
                    </div>
                <% }
            }); %>
        </div>
    </div>

    <div class="deck">
        <h3>Deck:</h3>
        <div class="cards-container">
            <% gamecards.forEach(card => { 
                if (card.location === 'deck') { %>
                    <div class="deckcard">
                        <img src="/cardImages/card_55.png">
                    </div>
                <% }
            }); %>
        </div>
    </div>

</head>

<body>
    <div class="chat-box">
        <h3>Chat</h3>
        <ul id="chatroom-messages"></ul>
        <form id="chatroom-form">
            <input type="text" id="chatroom-input" placeholder="Type your message..." />
            <button type="submit">Send</button>
        </form>
    </div>
    <script>
        const socket = io();
        const username = "<%= user.username %>";
        socket.emit('set-username', username);
    
    function appendMessage(username, message) {
        const chatMessages = document.getElementById('chatroom-messages');
        const li = document.createElement('li');
        li.appendChild(document.createTextNode(`${username}: ${message}`));
        chatMessages.appendChild(li);
    }

    // Event listener for new chat messages
    socket.on('chatroom-message', function (data) {
        appendMessage(data.username, data.message);
    });

    document.getElementById('chatroom-form').addEventListener('submit', function (e) {
        e.preventDefault();
        const messageInput = document.getElementById('chatroom-input');
        const message = messageInput.value.trim();

        if (message !== '') {
            // Emit the chat message to the server
            socket.emit('send-chatroom-message', { message });
            // Clear the input field
            messageInput.value = '';
        }
    });
        </script>
</body>
</html>
